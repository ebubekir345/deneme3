import {
  ClickableCellState,
  GridStoreState,
  imageViewerState,
  ImageViewerStoreState,
  initialGridState,
} from '@oplog/data-grid';
import { FileUploadsState, initialFileUploadsState } from '@oplog/file-uploader';
import { Resource, ResourceStoreState } from '@oplog/resource-redux';
import i18n from '../i18n';
import { getLocale } from '../i18n/index';
import { GridType } from '../models';
import { CreateTenantCommand } from '../services/swagger';

export const STORE_KEY = 'store.state';

export interface StoreState {
  resources: ResourceStoreState;
  grid: Dictionary<GridStoreState>;
  imageViewer: ImageViewerStoreState;
  clickableCell: ClickableCellState;
  intl: {
    locale: string;
    messages: any;
  };
  files: FileUploadsState;
}

export interface CreateTenantResource<T> extends Resource<T> {
  createTenantDTO?: CreateTenantCommand;
}

const memoryState: StoreState = {
  resources: {},
  grid: {
    [GridType.Tenants]: { ...initialGridState },
    [GridType.Settings]: { ...initialGridState },
    [GridType.Adresses]: { ...initialGridState },
    [GridType.CellContainers]: { ...initialGridState },
    [GridType.Totes]: { ...initialGridState },
    [GridType.Printers]: { ...initialGridState },
    [GridType.Trolleys]: { ...initialGridState },
    [GridType.StocksCurrentStatus]: { ...initialGridState },
    [GridType.StocksStockStatus]: { ...initialGridState },
    [GridType.StocksWaitingToPutAway]: { ...initialGridState },
    [GridType.StocksNoStock]: { ...initialGridState },
    [GridType.Products]: { ...initialGridState },
    [GridType.MasterCartons]: { ...initialGridState },
    [GridType.ProductsByAllStock]: { ...initialGridState },
    [GridType.ProductsByProductDefinition]: { ...initialGridState },
    [GridType.Operations]: { ...initialGridState },
    [GridType.Workflows]: { ...initialGridState },
    [GridType.SalesOrdersCreatedList]: { ...initialGridState },
    [GridType.SalesOrdersPickingList]: { ...initialGridState },
    [GridType.SalesOrdersPackingList]: { ...initialGridState },
    [GridType.SalesOrdersDispatchList]: { ...initialGridState },
    [GridType.SalesOrdersDeliveredList]: { ...initialGridState },
    [GridType.SalesOrdersCancelledList]: { ...initialGridState },
    [GridType.SalesOrderQueryLineItems]: { ...initialGridState },
    [GridType.ArrivedReturnPackagesList]: { ...initialGridState },
    [GridType.InProcessReturnPackagesList]: { ...initialGridState },
    [GridType.ResolvedReturnPackagesList]: { ...initialGridState },
    [GridType.UndefinedReturnPackagesList]: { ...initialGridState },
    [GridType.ReceivingWaybills]: { ...initialGridState },
    [GridType.ReceivingProducts]: { ...initialGridState },
    [GridType.ReceivingPurchaseOrders]: { ...initialGridState },
    [GridType.ReceivingPurchaseOrdersByOperation]: { ...initialGridState },
    [GridType.ReceivingWaybillHistory]: { ...initialGridState },
    [GridType.QuarantineToStock]: { ...initialGridState },
    [GridType.QuarantineDamaged]: { ...initialGridState },
    [GridType.QuarantineOutbound]: { ...initialGridState },
    [GridType.LostItems]: { ...initialGridState },
    [GridType.ReturnManagement]: { ...initialGridState },
    [GridType.ReturnQueryLineItems]: { ...initialGridState },
    [GridType.DispatchHistory]: { ...initialGridState },
    [GridType.DispatchSalesOrders]: { ...initialGridState },
    [GridType.DispatchCargoPackages]: { ...initialGridState },
    [GridType.DispatchManagement]: { ...initialGridState },
    [GridType.PickingManagementActivePickings]: { ...initialGridState },
    [GridType.SingleItemPickingToteDetails]: { ...initialGridState },
    [GridType.PickingManagementDropArea]: { ...initialGridState },
    [GridType.PickingManagementPackingArea]: { ...initialGridState },
    [GridType.PickingTrolleyPickingTotes]: { ...initialGridState },
    [GridType.PickingManagementParkingArea]: { ...initialGridState },
    [GridType.PickingManagementWaitingOrdersGrid]: { ...initialGridState },
    [GridType.PickingManagementQuarantineTotes]: { ...initialGridState },
    [GridType.PickingListsGrid]: { ...initialGridState },
    [GridType.PickListDetailsPickingPlan]: { ...initialGridState },
    [GridType.PickListDetailsPickingHistory]: { ...initialGridState },
    [GridType.PickingProblemsGrid]: { ...initialGridState },
    [GridType.DispatchProblemsGrid]: { ...initialGridState },
    [GridType.SalesOrderProblemsGrid]: { ...initialGridState },
    [GridType.SalesOrderOperationalStateDetails]: { ...initialGridState },
    [GridType.StocksZoneStatusGrid]: { ...initialGridState },
    [GridType.ZonesGrid]: { ...initialGridState },
    [GridType.ZoneDetailsAddressesGrid]: { ...initialGridState },
    [GridType.ZoneDetailsProductsGrid]: { ...initialGridState },
    [GridType.InboundProblemsGrid]: { ...initialGridState },
    [GridType.SalesOrderInboundProblemsGrid]: { ...initialGridState },
    [GridType.ReceivingOrdersPackagesGrid]: { ...initialGridState },
    [GridType.WaybillDetailsProblemsGrid]: { ...initialGridState },
    [GridType.WaybillDetailsPackagesGrid]: { ...initialGridState },
    [GridType.StockCountingTasksGrid]: { ...initialGridState },
    [GridType.FlowManagement]: { ...initialGridState },
    [GridType.PrioritizedSalesOrders]: { ...initialGridState },
    [GridType.PickListItems]: { ...initialGridState },
    [GridType.TransferTrolleys]: { ...initialGridState },
    [GridType.TransferTrolleyPickingTotes]: { ...initialGridState },
    [GridType.PutAwayManagementWaitingProducts]: { ...initialGridState },
    [GridType.PutAwayManagementWaitingTotes]: { ...initialGridState },
    [GridType.PutAwayManagementActivePutAways]: { ...initialGridState },
    [GridType.PutAwayManagementAvailablePutAwayTrolleys]: { ...initialGridState },
    [GridType.PutAwayManagementCellStatus]: { ...initialGridState },
    [GridType.PutAwayTrolleyTotes]: { ...initialGridState },
    [GridType.PutAwayTotes]: { ...initialGridState },
    [GridType.PickListDetailsSalesOrders]: { ...initialGridState },
    [GridType.SingleItemSalesOrdersToteDetails]: { ...initialGridState },
    [GridType.CountingPlans]: { ...initialGridState },
    [GridType.CountingPlanDetail]: { ...initialGridState },
    [GridType.CreateStockCountingPlan]: { ...initialGridState },
    [GridType.InventoryTrolleys]: { ...initialGridState },
    [GridType.InventoryToteStatus]: { ...initialGridState },
    [GridType.InventoryCellContainersGrid]: { ...initialGridState },
    [GridType.InventoryTrolleyListDetailsGrid]: { ...initialGridState },
    [GridType.InventoryToteListDetailsGrid]: { ...initialGridState },
    [GridType.CountingLists]: { ...initialGridState },
    [GridType.ActiveCountings]: { ...initialGridState },
    [GridType.CountingListDetail]: { ...initialGridState },
    [GridType.SalesOrdersProductDetail]: { ...initialGridState },
    [GridType.PurchaseOrdersProductDetail]: { ...initialGridState },
    [GridType.SystemCountings]: { ...initialGridState },
    [GridType.ReceivingPurchasePackages]: { ...initialGridState },
    [GridType.ActiveReceivingPurchaseOrders]: { ...initialGridState },
    [GridType.ManualCountings]: { ...initialGridState },
    [GridType.GetReceivingToteDetails]: { ...initialGridState },
    [GridType.GetQuarantineToteDetails]: { ...initialGridState },
    [GridType.CountingFlowManagement]: { ...initialGridState },
    [GridType.InventoryCellCountings]: { ...initialGridState },
    [GridType.VasItems]: { ...initialGridState },
    [GridType.DispatchPackages]: { ...initialGridState },
    [GridType.ProductReturnPackageDetails]: { ...initialGridState },
    [GridType.ProductStockCountingLists]: { ...initialGridState },
    [GridType.ReservedProductManagementBlockerFeeds]: { ...initialGridState },
    [GridType.ReservedProductManagementReservedProducts]: { ...initialGridState },
    [GridType.ReservedProductManagementProposedFeeds]: { ...initialGridState },
    [GridType.QualityCountings]: { ...initialGridState },
    [GridType.ExpirationDateTrackings]: { ...initialGridState },
    [GridType.ReceivingPurchaseWaybills]: { ...initialGridState },
    [GridType.PackageGridDetails]: { ...initialGridState },
    [GridType.PickListExpectedItemsByCellLabel]: { ...initialGridState },
    [GridType.InventoryItemsByProductWithSerialNumber]: { ...initialGridState },
    [GridType.SerialNumberTrack]: { ...initialGridState },
    [GridType.SimpleSerialNumberTrack]: { ...initialGridState },
    [GridType.ManualPicklists]: { ...initialGridState },
    [GridType.PickListRequests]: { ...initialGridState },
    [GridType.PickListRequestSalesOrderDetails]: { ...initialGridState },
    [GridType.PickListRequestPickListDetails]: { ...initialGridState },
    [GridType.WaitingPallets]: { ...initialGridState },
    [GridType.PutAwayReceivedItemsByPallet]: { ...initialGridState },
    [GridType.WallToWallStockCountingTasksQueryCells]: { ...initialGridState },
    [GridType.PreviewWallToWallStockCountingPlanLists]: { ...initialGridState },
    [GridType.PreviewWallToWallStockCountingPlanItems]: { ...initialGridState },
    [GridType.QueryWallToWallStockCountingLists]: { ...initialGridState },
    [GridType.QueryWallToWallStockCountingAddresses]: { ...initialGridState },
    [GridType.QueryWallToWallStockCountingDamagedItems]: { ...initialGridState },
    [GridType.QueryWallToWallStockCountingProducts]: { ...initialGridState },
    [GridType.GetListsWithIncorrectCountedCells]: { ...initialGridState },
    [GridType.GetCellsForControlCount]: { ...initialGridState },
    [GridType.QueryWallToWallStockCountingOperationsReport]: { ...initialGridState },
    [GridType.QueryWallToWallStockCountingAddressesReport]: { ...initialGridState },
    [GridType.QueryWallToWallStockCountingProductsReport]: { ...initialGridState },
    [GridType.QueryWallToWallStockCountingListsReport]: { ...initialGridState },
    [GridType.QueryWallToWallStockCountingDamagedItemsReport]: { ...initialGridState },
    [GridType.QueryShippingItemsByProduct]: { ...initialGridState },
    [GridType.QuerySalesOrdersWithPickListProblems]: { ...initialGridState },
    [GridType.QueryStockZonePickListCapacity]: { ...initialGridState },
  },
  imageViewer: imageViewerState,
  clickableCell: {
    refNo: undefined,
  },
  intl: {
    locale: i18n.language,
    messages: getLocale(i18n.language).messages,
  },
  files: initialFileUploadsState(),
};

export const initialState: StoreState = { ...memoryState };

export default initialState;
